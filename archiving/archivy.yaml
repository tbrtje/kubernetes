apiVersion: v1
kind: Namespace
metadata:
  name: archivy
---
apiVersion: longhorn.io/v1beta1
kind: Volume
metadata:
  labels:
    longhornvolume: archivy
  name: archivy
  namespace: longhorn-system
spec:
  Standby: false
  disableFrontend: false
  engineImage: longhornio/longhorn-engine:v1.0.2
  frontend: blockdev
  numberOfReplicas: 2
  size: "1024000000"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: archivy
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 800M
  csi:
    driver: driver.longhorn.io
    fsType: ext4
    volumeAttributes:
      numberOfReplicas: "1"
      staleReplicaTimeout: "30"
    volumeHandle: archivy
  persistentVolumeReclaimPolicy: Retain
  storageClassName: longhorn-static
  volumeMode: Filesystem
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.thies.service: archivy
  name: archivy
  namespace: archivy
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 800M
  storageClassName: longhorn-static
  volumeMode: Filesystem
  volumeName: archivy
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.thies.service: archivy
  name: archivy
  namespace: archivy
spec:
  replicas: 1
  selector:
    matchLabels:
      io.thies.service: archivy
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        io.thies.service: archivy
    spec:
      containers:
      - image: bitwardenrs/server-mysql
        imagePullPolicy: Always
        name: archivy
        env:
        - name: ADMIN_TOKEN
          valueFrom:
            secretKeyRef:
              name: bitwarden
              key: admin-token
        ports:
        - containerPort: 80
          hostPort: 80
          name: http
          protocol: TCP
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
        volumeMounts:
        - mountPath: /data
          name: config
      restartPolicy: Always
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: archivy
---
apiVersion: v1
kind: Service
metadata:
  labels:
    io.thies.service: archivy
  name: archivy
  namespace: archivy
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    io.thies.service: archivy
  type: ClusterIP
