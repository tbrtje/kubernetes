apiVersion: v1
kind: Namespace
metadata:
  name: minio
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: big-storage
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 8000Gi
  claimRef:
    apiVersion: v1
    kind: PersistentVolumeClaim
    name: minio-data
    namespace: minio
  hostPath:
    path: /mnt/8TB/Kubernetes/Backup
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - node1
  persistentVolumeReclaimPolicy: Retain
  storageClassName: manual
  volumeMode: Filesystem
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-data
  namespace: minio
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 550Gi
  storageClassName: manual
  volumeMode: Filesystem
  volumeName: big-storage
---
---
apiVersion: v1
kind: Service
metadata:
  labels:
    io.thies.service: minio
  name: minio
spec:
  ports:
  - name: "9000"
    port: 9000
    targetPort: 9000
  selector:
    io.thies.service: minio
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: minio
  name: minio
  namespace: minio
spec:
  replicas: 1
  selector:
    matchLabels:
      io.thies.service: minio
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.thies.service: minio
    spec:
      containers:
      - args:
        - server
        - /export
        image: minio/minio:RELEASE.2020-10-03T02-19-42Z
        imagePullPolicy: Always
        livenessProbe:
          exec:
            command:
            - curl
            - -f
            - http://localhost:9000/minio/health/live
          failureThreshold: 3
          periodSeconds: 30
          timeoutSeconds: 20
        name: minio
        ports:
        - containerPort: 9000
        resources: {}
        volumeMounts:
        - mountPath: /export
          name: minio-data
        env:
          - name: ACCESS_KEY
            valueFrom:
              SecretKeyRef:
                name: keys
                key: access-key
          - name: SECRET_KEY
            valueFrom:
              SecretKeyRef:
                name: keys
                key: secret-key
      hostname: minio
      restartPolicy: Always
      volumes:
      - name: minio-data
        persistentVolumeClaim:
          claimName: minio-data
